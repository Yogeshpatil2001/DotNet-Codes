Q>Create a class Employee having private instance member 
id- id is readonly property and generated by your application
name- write getter setter
salary- write getter setter
net salary
Write method whoâ€™s job is to deduct TDS 10% and return tax amount and set netsalary instance member after deducting tax.
Declare TDS as static variable.
Your application should create only 3 object if you try to create 4th object it should throw exception.
Give appropriate validation like salary can not be 0 or negative, maximum
Salary allowed is 50000 if you try to set more then 50000 it should give some error message.
When you run your application it should print name of company.
-->
namespace Properties
{
    internal class Employee
    {
        private int id;
        static int getid;
        private String name;
        private double salary;
        private double netsalary;
        static double tds = 0.1;
        const int limit = 3;
        static Employee()
        {
            Console.WriteLine("tcs");
        }
        public Employee(String name,double salary)
        {
            if (getid < limit)
            {
                id = ++getid;
                Name = name;
                Salary = salary;
               
            }
            else
            {
                throw new Exception("maximum limit of object creation is 3 ");
            }
        }
        public int ID
        {//id is read only 
            get{return id;}
        }
        public string Name
        {
            set { name = value; }
            get { return name; }
        }
        public double Salary
        {
             
            set {
                if (value <= 0)
                {
                    Console.WriteLine("salary can not be 0 or negative");
                }
                else if (value>=50000)
                {
                    Console.WriteLine("salary can not be more than 50000");
                }
                else
                {
                    salary = value;
                }
            }
            get { return salary; }
        }
        public static double paytax(Employee obj)
        {
            obj.netsalary = obj.Salary - obj.Salary * tds;
            Console.WriteLine("netsalary:" + obj.netsalary);
            double tax =  obj.salary- obj.netsalary;
            return tax;
        }
    }
    class demo
    {
        public static void Main()
        {
            try
            {
                Employee emp = new Employee("prashant", 4000);
                Console.WriteLine("id:" + emp.ID + " " + "name:" + emp.Name + " " + "salary:" + emp.Salary);
                double tax = Employee.paytax(emp);
                Console.WriteLine("prashant tax:" + tax);
                Employee emp1 = new Employee("pooja", 5000);
                Console.WriteLine("id:" + emp1.ID + " " + "name:" + emp1.Name + " " + "salary:" + emp1.Salary);
                double tax1 = Employee.paytax(emp1);
                Console.WriteLine("pooja tax:" + tax1);
                Employee emp2 = new Employee("shubham", 6000);
                Console.WriteLine("id:" + emp2.ID + " " + "name:" + emp2.Name + " " + "salary:" + emp2.Salary);
                double tax2 = Employee.paytax(emp2);
                Console.WriteLine("shubham tax:" + tax2);
                Employee emp3 = new Employee("vinita", 7000);
                Console.WriteLine("id:" + emp3.ID + " " + "name:" + emp3.Name + " " + "salary:" + emp3.Salary);
                double tax3 = Employee.paytax(emp3);
                Console.WriteLine("vinita tax:" + tax3);
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }
            
        }
    }
}
